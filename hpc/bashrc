# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH
# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
# unload all modules first
module purge
user_home=/home/$USER
# create handy shortcuts for running common programs
if [ ! -d $user_home/Desktop/.scripts ]; then
	mkdir $user_home/Desktop/.scripts
fi
if [ ! -d $user_home/Desktop/.icons ]; then
	mkdir $user_home/Desktop/.icons
fi


# icons for softwares
matlab_icon_url="https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Matlab_Logo.png/1005px-Matlab_Logo.png"
ilastik_icon_url="https://chanzuckerberg.com/wp-content/uploads/2020/11/ilastik-fist-Anna-Kreshuk.png"
jupyter_icon_url="https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Jupyter_logo.svg/1200px-Jupyter_logo.svg.png"
fiji_icon_url="https://fiji.sc/site/logo.png"

if [ ! -f $user_home/Desktop/.icons/matlab.png ]; then
	wget -O $user_home/Desktop/.icons/matlab.png $matlab_icon_url 
fi
if [ ! -f $user_home/Desktop/.icons/ilastik.png ]; then
	wget -O $user_home/Desktop/.icons/ilastik.png $ilastik_icon_url
fi
if [ ! -f $user_home/Desktop/.icons/jupyter.png ]; then
	wget -O $user_home/Desktop/.icons/jupyter.png $jupyter_icon_url
fi
if [ ! -f $user_home/Desktop/.icons/fiji.png ]; then
	wget -O $user_home/Desktop/.icons/fiji.png $fiji_icon_url
fi

# matlab
if [ ! -f $user_home/Desktop/.scripts/matlab ]; then
	rm $user_home/Desktop/.scripts/matlab
fi
touch $user_home/Desktop/.scripts/matlab
# you can modify this part for a different version of matlab, etc.
cat > $user_home/Desktop/.scripts/matlab << 'EOF'	
#!/bin/bash

module load matlab/R2024b
matlab -desktop
EOF
chmod 777 $user_home/Desktop/.scripts/matlab
if [ -f $user_home/Desktop/matlab.desktop ]; then
	rm $user_home/Desktop/matlab.desktop
fi
touch $user_home/Desktop/matlab.desktop
cat > $user_home/Desktop/matlab.desktop << EOF	
[Desktop Entry]
Type=Application
Name=matlab
Exec=/home/$USER/Desktop/.scripts/matlab
Icon=/home/$USER/Desktop/.icons/matlab.png
Terminal=false
EOF
chmod 777 $user_home/Desktop/matlab.desktop

# ilastik
if [ -f $user_home/Desktop/.scripts/ilastik ]; then
	rm $user_home/Desktop/.scripts/ilastik
fi
touch $user_home/Desktop/.scripts/ilastik
# there is only one version of ilastik on the greatlakes server.
# one can download a binary and add to path if a different version is preferred
cat > $user_home/Desktop/.scripts/ilastik << 'EOF'	
#!/bin/bash

module load Bioinformatics ilastik/1.4.0
run_ilastik.sh
EOF
chmod 777 $user_home/Desktop/.scripts/ilastik
if [ -f $user_home/Desktop/ilastik.desktop ]; then
	rm $user_home/Desktop/ilastik.desktop
fi
touch $user_home/Desktop/ilastik.desktop
cat > $user_home/Desktop/ilastik.desktop << EOF	
[Desktop Entry]
Type=Application
Name=ilastik
Exec=/home/$USER/Desktop/.scripts/ilastik
Icon=/home/$USER/Desktop/.icons/ilastik.png
Terminal=false
EOF
chmod 777 $user_home/Desktop/ilastik.desktop

# jupyter
# note that this environment contains cellpose and jupyter lab  for segmentation and visualization
# one can also create their own envrionment with pip venv or conda (just need to load anaconda)
if [ -f $user_home/Desktop/.scripts/jupyter ]; then
	rm $user_home/Desktop/.scripts/jupyter
fi
touch $user_home/Desktop/.scripts/jupyter
cat > $user_home/Desktop/.scripts/jupyter	<< 'EOF'
#!/bin/bash
# this kills all currently running jupyter servers
# maybe it is a bad idea, maybe people need multiple notebooks
# ps aux | grep jupyter | grep -v grep | grep -v "$0" | awk '{print $2}' | xargs -r kill

module load python/3.12
source /nfs/turbo/umms-iheemske/python-venv/cellpose-gpu/bin/activate
# always sync the environment to make sure the package versions are right
pip-sync /nfs/turbo/umms-iheemske/python-venv/cellpose-gpu/requirements_cellpose.txt

jupyter lab
EOF
chmod 777 $user_home/Desktop/.scripts/jupyter
if [ -f $user_home/Desktop/jupyter.desktop ]; then
	rm $user_home/Desktop/jupyter.desktop
fi
touch $user_home/Desktop/jupyter.desktop
cat > $user_home/Desktop/jupyter.desktop << EOF	
[Desktop Entry]
Type=Application
Name=jupyter
Exec=/home/$USER/Desktop/.scripts/jupyter
Icon=/home/$USER/Desktop/.icons/jupyter.png
Terminal=true
EOF
chmod 777 $user_home/Desktop/jupyter.desktop

if [ -f $user_home/Desktop/.scripts/fiji ]; then
	rm $user_home/Desktop/.scripts/fiji
fi
touch $user_home/Desktop/.scripts/fiji
cat > $user_home/Desktop/.scripts/fiji	<< 'EOF'
#!/bin/bash
module load fiji
fiji
EOF
chmod 777 $user_home/Desktop/.scripts/fiji
if [ -f $user_home/Desktop/fiji.desktop ]; then
	rm $user_home/Desktop/fiji.desktop
fi
touch $user_home/Desktop/fiji.desktop
cat > $user_home/Desktop/fiji.desktop << EOF	
[Desktop Entry]
Type=Application
Name=fiji
Exec=/home/$USER/Desktop/.scripts/fiji
Icon=/home/$USER/Desktop/.icons/fiji.png
Terminal=false
EOF
chmod 777 $user_home/Desktop/fiji.desktop

#clone github repo
git_token="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"
if [ ! -d $user_home/Desktop/HeemskerkLab_sync ]; then
	git clone "https://HeemskerkLab:${git_token}@github.com/HeemskerkLab/HeemskerkLab.git" $user_home/Desktop/HeemskerkLab_sync
else
	cd $user_home/Desktop/HeemskerkLab_sync
	git pull "https://HeemskerkLab:${git_token}@github.com/HeemskerkLab/HeemskerkLab.git"
	cd $user_home
fi

#add symbolic link to the scratch folder
if [ ! -L $user_home/Desktop/${USER}_scratch_space ]; then
	ln -s /scratch/iheemske_root/iheemske0/$USER $user_home/Desktop/${USER}_scratch_space
fi

#add modules
if [ ! -d $user_home/Lmod ]; then
	my_modules_setup
fi
#clear lmod cache otherwise module list won't be updated
if [ -d $user_home/.lmod.d/.cache ]; then
	rm -f $user_home/.lmod.d/.cache/*
fi
#copy config files to the home lmod folder
rm -rf $user_home/Lmod/*
cp -r /nfs/turbo/umms-iheemske/modules-share/lmod-config/* $user_home/Lmod/
# module load use.own (this enables custom modules but slow things down a lot)
